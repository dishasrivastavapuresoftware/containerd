name: CI
on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'

jobs:
  #
  # golangci-lint
  #
  linters:
    name: Linters
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        go-version: [1.18.3]
        os: [ubuntu-18.04]

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.0
          skip-cache: true
          args: --timeout=5m

  #
  # Project checks
  #
  project:
    name: Project Checks
    runs-on: ubuntu-18.04
    timeout-minutes: 5

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'

      - uses: actions/checkout@v2
        with:
          path: src/github.com/containerd/containerd
          fetch-depth: 100

      - uses: containerd/project-checks@v1
        with:
          working-directory: src/github.com/containerd/containerd

      - name: verify go modules and vendor directory
        run: |
          sudo apt-get install -y jq
          make verify-vendor
        working-directory: src/github.com/containerd/containerd

  #
  # Protobuf checks
  #
  protos:
    name: Protobuf
    runs-on: ubuntu-18.04
    timeout-minutes: 5

    defaults:
      run:
        working-directory: src/github.com/containerd/containerd

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'

      - uses: actions/checkout@v2
        with:
          path: src/github.com/containerd/containerd

      - name: Set env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Install protobuf
        run: |
          sudo -E PATH=$PATH script/setup/install-protobuf
          sudo chmod +x /usr/local/bin/protoc
          sudo chmod og+rx /usr/local/include/google /usr/local/include/google/protobuf /usr/local/include/google/protobuf/compiler
          sudo chmod -R og+r /usr/local/include/google/protobuf/
          protoc --version

      - run: script/setup/install-dev-tools
      - run: make proto-fmt
      - run: make check-protos check-api-descriptors

  man:
    name: Manpages
    runs-on: ubuntu-18.04
    timeout-minutes: 5

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - uses: actions/checkout@v2
      - run: go install github.com/cpuguy83/go-md2man/v2@v2.0.1
      - run: make man

  
  



  tests-mac-os:
    name: MacOS unit tests
    runs-on: macos-10.15
    timeout-minutes: 10
    needs: [project, linters, protos, man]
    env:
      GOTEST: gotestsum --

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - uses: actions/checkout@v2
      - run: sudo -E PATH=$PATH script/setup/install-gotestsum
      - name: Tests
        env:
          GOPROXY: direct
          GOTESTSUM_JUNITFILE: "${{ github.workspace }}/macos-test-junit.xml"
        run: make test
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: TestResults MacOS
          path: |
            *-junit.xml
  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-18.04
      
      env:
        GOTEST: gotestsum --
      steps:
        - uses: actions/setup-go@v2
          with:
            go-version: '1.18.2'
        - uses: actions/checkout@v2
        
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:18.04 \
              bash -exc 'apt-get update && apt-get -y install git sudo curl make wget git unzip && \
              wget https://go.dev/dl/go1.18.2.linux-arm64.tar.gz && \
              sudo tar -xvf go1.18.2.linux-arm64.tar.gz && \
              sudo mv go /usr/local && \
              export GOPATH=$HOME/go && \
              export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin && \
              source ~/.profile && \
              go version && \
              git config --global --add safe.directory /ws && \
              sudo -E PATH=$PATH script/setup/install-protobuf && \
              sudo chmod +x /usr/local/bin/protoc && \
              sudo chmod og+rx /usr/local/include/google /usr/local/include/google/protobuf /usr/local/include/google/protobuf/compiler && \
              sudo chmod -R og+r /usr/local/include/google/protobuf/ && \
              protoc --version && \
              script/setup/install-dev-tools && \
              make proto-fmt && \
              make check-protos check-api-descriptors && \
              deactivate'
